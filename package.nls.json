{
	"displayName": "GitHub Pull Requests and Issues",
	"description": "Pull Request and Issue Provider for GitHub",
	"githubPullRequests.pullRequestDescription.description": "The description used when creating pull requests.",
	"githubPullRequests.pullRequestDescription.template": "Use a pull request template and commit description, or just use the commit description if no templates were found",
	"githubPullRequests.pullRequestDescription.commit": "Use the latest commit message only",
	"githubPullRequests.logLevel.description": "Logging for GitHub Pull Request extension. The log is emitted to the output channel named as GitHub Pull Request.",
	"githubPullRequests.remotes.markdownDescription": "List of remotes, by name, to fetch pull requests from.",
	"githubPullRequests.queries.markdownDescription": "Specifies what queries should be used in the GitHub Pull Requests tree. Each query object has a `label` that will be shown in the tree and a search `query` using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax). The variable `${user}` can be used to specify the logged in user within a search. By default these queries define the categories \"Waiting For My Review\", \"Assigned To Me\" and \"Created By Me\". If you want to preserve these, make sure they are still in the array when you modify the setting.",
	"githubPullRequests.queries.label.description": "The label to display for the query in the Pull Requests tree",
	"githubPullRequests.queries.query.description": "The query used for searching pull requests.",
	"githubPullRequests.defaultMergeMethod.description": "The method to use when merging pull requests.",
	"githubPullRequests.notifications.description": "If GitHub notifications should be shown to the user.",
	"githubPullRequests.fileListLayout.description": "The layout to use when displaying changed files list.",
	"githubPullRequests.defaultDeletionMethod.selectLocalBranch.description": "When true, the option to delete the local branch will be selected by default when deleting a branch from a pull request.",
	"githubPullRequests.defaultDeletionMethod.selectRemote.description": "When true, the option to delete the remote will be selected by default when deleting a branch from a pull request.",
	"githubPullRequests.terminalLinksHandler.description": "Default handler for terminal links.",
	"githubPullRequests.terminalLinksHandler.github": "Create the pull request on GitHub",
	"githubPullRequests.terminalLinksHandler.vscode": "Create the pull request in VS Code",
	"githubPullRequests.terminalLinksHandler.ask": "Ask which method to use",
	"githubPullRequests.createOnPublishBranch.description": "Create a pull request when a branch is published.",
	"githubPullRequests.createOnPublishBranch.never": "Never create a pull request when a branch is published.",
	"githubPullRequests.createOnPublishBranch.ask": "Ask if you want to create a pull request when a branch is published.",
	"githubPullRequests.commentExpandState.description": "Controls whether comments are expanded when a document with comments is opened.",
	"githubPullRequests.commentExpandState.expandUnresolved": "All unresolved comments will be expanded.",
	"githubPullRequests.commentExpandState.collapseAll": "All comments will be collapsed",
	"githubPullRequests.useReviewMode.description": "Choose which pull request states will use review mode. \"Open\" pull requests will always use review mode.",
	"githubPullRequests.useReviewMode.merged": "Use review mode for merged pull requests.",
	"githubPullRequests.useReviewMode.closed": "Use review mode for closed pull requests. Merged pull requests are not considered \"closed\".",
	"githubPullRequests.assignCreated.description": {
		"message": "All pull requests created with this extension will be assigned to this user. To assign to yourself, use the '${user}' variable.",
		"comment": [
			"{Locked=']${user}'}",
			"Do not translate what's inside of the '${..}'. It is an internal syntax for the extension"
		]
	},
	"githubPullRequests.pushBranch.description": "Push the \"from\" branch when creating a PR and the \"from\" branch is not available on the remote.",
	"githubPullRequests.pushBranch.prompt": "Prompt to push the branch when creating a PR and the \"from\" branch is not available on the remote.",
	"githubPullRequests.pushBranch.always": "Always push the branch when creating a PR and the \"from\" branch is not available on the remote.",
	"githubPullRequests.pullBranch.description": "Pull changes from the remote when a PR branch is checked out locally. Changes are detected when the PR is manually refreshed and during periodic background updates.",
	"githubPullRequests.pullBranch.prompt": "Prompt to pull a PR branch when changes are detected in the PR.",
	"githubPullRequests.pullBranch.never": "Never pull a PR branch when changes are detected in the PR.",
	"githubPullRequests.pullBranch.always": "Always pull a PR branch when changes are detected in the PR. When `\"git.autoStash\": true` this will instead `prompt` to prevent unexpected file changes.",
	"githubPullRequests.ignoredPullRequestBranches.description": "Prevents branches that are associated with a pull request from being automatically detected. This will prevent review mode from being entered on these branches.",
	"githubPullRequests.ignoredPullRequestBranches.items": "Branch name",
	"githubPullRequests.overrideDefaultBranch.description": "The default branch for a repository is set on github.com. With this setting, you can override that default with another branch.",
	"githubPullRequests.postCreate.description": "The action to take after creating a pull request.",
	"githubPullRequests.postCreate.none": "No action",
	"githubPullRequests.postCreate.openOverview": "Open the overview page of the pull request",
	"githubIssues.ignoreMilestones.description": "An array of milestones titles to never show issues from.",
	"githubIssues.createIssueTriggers.description": "Strings that will cause the 'Create issue from comment' code action to show.",
	"githubIssues.createIssueTriggers.items": "String that enables the 'Create issue from comment' code action. Should not contain whitespace.",
	"githubIssues.createInsertFormat.description": "Controls whether an issue number (ex. #1234) or a full url (ex. https://github.com/owner/name/issues/1234) is inserted when the Create Issue code action is run.",
	"githubIssues.issueCompletions.enabled.description": "Controls whether completion suggestions are shown for issues.",
	"githubIssues.userCompletions.enabled.description": "Controls whether completion suggestions are shown for users.",
	"githubIssues.ignoreCompletionTrigger.description": "Languages that the '#' character should not be used to trigger issue completion suggestions.",
	"githubIssues.ignoreCompletionTrigger.items": "Language that issue completions should not trigger on '#'.",
	"githubIssues.ignoreUserCompletionTrigger.description": "Languages that the '@' character should not be used to trigger user completion suggestions.",
	"githubIssues.ignoreUserCompletionTrigger.items": "Language that user completions should not trigger on '@'.",
	"githubIssues.issueBranchTitle.markdownDescription": {
		"message": "Advanced settings for the name of the branch that is created when you start working on an issue. \n- `${user}` will be replace with the currently logged in username \n- `${issueNumber}` will be replaced with the current issue number \n- `${sanitizedIssueTitle}` will be replaced with the issue title, with all spaces and unsupported characters (https://git-scm.com/docs/git-check-ref-format) removed",
		"comment": [
			"{Locked=']${...}'}",
			"Do not translate what's inside of the '${..}'. It is an internal syntax for the extension"
		]
	},
	"githubIssues.useBranchForIssues.description": {
		"message": "Determines whether a branch should be checked out when working on an issue. To configure the name of the branch, set `githubIssues.issueBranchTitle`.",
		"comment": [
			"{Locked=']`githubIssues.issueBranchTitle`'}",
			"Do not translate what's inside of the `...`. It is an setting id."
		]
	},
	"githubIssues.useBranchForIssues.on": "A branch will always be checked out when you start working on an issue. If the branch doesn't exist, it will be created.",
	"githubIssues.useBranchForIssues.off": "A branch will not be created when you start working on an issue. If you have worked on an issue before and a branch was created for it, that same branch will be checked out.",
	"githubIssues.useBranchForIssues.prompt": "A prompt will show for setting the name of the branch that will be created and checked out.",
	"githubIssues.issueCompletionFormatScm.markdownDescription": {
		"message": "Sets the format of issue completions in the SCM inputbox. \n- `${user}` will be replace with the currently logged in username \n- `${issueNumber}` will be replaced with the current issue number \n- `${issueNumberLabel}` will be replaced with a label formatted as #number or owner/repository#number, depending on whether the issue is in the current repository",
		"comment": [
			"Do not translate what's inside of the ${...}. It is an internal syntax for the extension."
		]
	},
	"githubIssues.workingIssueFormatScm.markdownDescription": {
		"message": "Sets the format of the commit message that is set in the SCM inputbox when you **Start Working on an Issue**. Defaults to `${issueTitle} \nFixes #${issueNumber}`",
		"comment": [
			"Do not translate what's inside of the ${...}. It is an internal syntax for the extension."
		]
	},


}